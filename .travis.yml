# project language
language: java

jdk:
- oraclejdk8

cache:
directories:
- $HOME/.m2

# To use more customizable environment running in a virtual machine
sudo: enabled

# Ubuntu distribution to use as test environment
dist: trusty

# Travis CI uses the .travis.yml file from the branch containing the git commit that triggers the build.
# Include branches using a safelist, or exclude them using a blocklist.
branches:
only:
- master
- release
- /^DATA-\d+.*$/
- /^epic-DATA-\d+.*$/

env:
# Environment variables available in all builds
global:
- echo "Skipping global phase"

# Install any dependencies requires by the project.
# Note: Travis defaults to `mvn install` if unspecified.
install:
- echo "Skipping install phase"

# Travis CI clones repositories to a depth of 50 commits, which is only really useful if you are performing git operations, so 
# See https://docs.travis-ci.com/user/customizing-the-build#git-clone-depth
git:
depth: false

# Phase to run something before script phase.
before_script:
# Force the jar version to be the TRAVIS_BUILD_NUMBER, ignoring the version defined in pom.xml
- mvn versions:set -DnewVersion="0.0.${TRAVIS_BUILD_NUMBER}"

# Main section. This is where build and test command(s) are specified.
# If tests pass, publish Docker image (note that we do this here because we want a failed Docker image publish to fail the entire build)
script:
- mvn --show-version clean test package

deploy:
provider: script
script: mvn --show-version clean install
skip_cleanup: true
on:
branch: release
